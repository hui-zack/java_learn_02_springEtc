<?xml version="1.0" encoding="UTF-8"?>
<!--
    1-1 开启context命名空间
        // 开启命名空间, 复制到xmlns下面
        xmlns:context="http://www.springframework.org/schema/context"

        // 在xmlns:xsi添加约束方式
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
    ">





    <!-- 1-2 使用context空间加载properties文件
            system-properties-mode="NEVER" 不加载系统环境变量, 避免配置文件的中key和系统环境变量
            location="classpath*:jdbc.properties"
                classpath*: 既可以从resource中拿到配置文件, 也可以在jar包中拿到配置文件
    -->
    <context:property-placeholder location="classpath*:*.properties" system-properties-mode="NEVER"/>

    <!-- 1-3 在druid配置文件中使用属性占位符, 读取properties配置 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

</beans>